{
	"info": {
		"_postman_id": "68d7c6a2-72cf-4252-9880-abecb6576d7d",
		"name": "Layered Storage API Collection Copy",
		"description": "Postman collection for testing UserManagment and LayeredStorage APIs with JWT authentication.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11421454"
	},
	"item": [
		{
			"name": "Login - Get Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"if (pm.response.code === 200) {",
							"  var jsonData = pm.response.json();",
							"  if (jsonData.data && jsonData.data.token) {",
							"    pm.collectionVariables.set(\"access_token\", jsonData.data.token);",
							"    console.log(\"Admin token saved to access_token\");",
							"  } else {",
							"    console.warn(\"No token found in admin login response.\");",
							"  }",
							"} else {",
							"  console.error(\"Admin login failed:\", pm.response.code);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"admin\",\n  \"password\": \"admin\"\n}"
				},
				"url": {
					"raw": "http://localhost:5001/api/Account/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"Account",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Protected Data (LayeredStorage)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "http://localhost:5002/api/Data/get-data-by-id/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5002",
					"path": [
						"api",
						"Data",
						"get-data-by-id",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Insert a New Data",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5002/api/Data/incert-data",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5002",
					"path": [
						"api",
						"Data",
						"incert-data"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Current data",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"data\": \"string\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5002/api/Data/update-data/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5002",
					"path": [
						"api",
						"Data",
						"update-data",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Current data Second Time",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"data\": \"string\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5002/api/Data/update-data/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5002",
					"path": [
						"api",
						"Data",
						"update-data",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a User",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"if (pm.response.code === 200) {",
							"  var jsonData = pm.response.json();",
							"  if (jsonData.data && jsonData.data.token) {",
							"    pm.collectionVariables.set(\"user_token\", jsonData.data.token);",
							"    console.log(\"User token saved to user_token\");",
							"  } else {",
							"    console.warn(\"No token found in register response.\");",
							"  }",
							"} else {",
							"  console.error(\"User registration failed:\", pm.response.code);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"user\",\r\n  \"password\": \"user\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5001/api/Account/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"Account",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Insert Data as User",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:5002/api/Data/incert-data'",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5002",
					"path": [
						"api",
						"Data",
						"incert-data'"
					]
				}
			},
			"response": []
		},
		{
			"name": "Insert Data as Admin",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:5002/api/Data/incert-data",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5002",
					"path": [
						"api",
						"Data",
						"incert-data"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "access_token",
			"value": ""
		},
		{
			"key": "user_token",
			"value": "",
			"type": "string"
		}
	]
}